#!/usr/bin/env node

/**
 *
 * @author xgqfrms
 * @license MIT
 * @copyright xgqfrms 2019.05.12
 *
 * @description APP_ENV Genarator
 * @augments
 * @example node env-generator.js env=dev
 *
 */

const fs = require("fs");
const args = process.argv.slice(2) || [];

const filename = "./env.js";

const isPureNumber = (str = '') => {
  // [...''.padEnd(10, 'x')].map((item, i) => i);
  // (10)Â [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
  // [...''.padEnd(10, 'x')].map((item, i) => `${i}`);
  // (10)Â ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
  const numberDict = [...''.padEnd(10, 'x')].map((item, i) => `${i}`);
  const arr = str.split('');
  return arr.every(item => numberDict.includes(item));
  // arr.every(item => {
  //   console.log('item', item, dict, dict.includes(item))
  //   return dict.includes(item);
  // });
}

let key = "";
let env = "";
if (!args[0]) {
  args[0] = "";
} else {
  console.log();
  // env = args[0].substr(4);
  const tempArr = args[0].split('=');
  // key = tempArr[0] ?? 'APP_ENV';
  key = tempArr[0] || 'APP_ENV';
  env = isPureNumber(tempArr[1]) ? parseInt(tempArr[1]) : tempArr[1];
}

const defaultTemplate = `
// default
const ${key} = ${env};\n
export default ${key};\n
`;

const envTemplate = `
// ðŸŽ‰
const ${key} = ${env};\n
export default ${key};\n
`;

fs.open(filename, "r", (err, fd) => {
  if (err) {
    fs.writeFile(filename, defaultTemplate, (err, fd) => {
      if (err) {
        console.log(`writeFile err =`, err);
      }
    });
  } else {
    fs.writeFile(filename, envTemplate, (err, fd) => {
      if (err) {
        console.log(`writeFile err =`, err);
      }
    });
  }
});

